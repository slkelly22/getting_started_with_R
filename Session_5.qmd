---
title: "Getting Started with R: Session 5"
author: "S. Kelly | Scholar Support and Data Services | Fall 2025"
format: 
  revealjs: 
    code-overflow: wrap
    footer: "S.Kelly | Getting Started with R | Fall 2025"
editor: visual
execute: 
  echo: true
---

## Let's get started

-   Open your R project
-   Create a new .R file
-   Load the two R packages we'll use today

```{r}
library(tidyverse)
library(cherryblossom)

# run search to confirm loaded packages
search()
```

## New Function: group_by

`group_by()` is how you group your data by a categorical variable. Often followed with the `summarize()` function. 

```{r}
#| echo: TRUE
#| eval: FALSE
run17 |> 
  group_by(event) |> 
  summarize()
```

![](images/grouped_tibble.png)

## New Function: summarize

Be careful! The `summarize()` function is not the same as the `summary()` function from Base R. `summarize()` is similar to the `mutate()` function. Both create a new variable, but whereas `mutate()` creates a variable for every row, `summarize()` only creates a variable for groups specified in the `group_by()` function. 

```{r}
run17 |> 
  group_by(event) |> 
  summarize(event_means = mean(pace_sec, na.rm = T))
```

## Activity

What is the X X (using group_by and summary)

## Basic Boxplot

Let's create a basic boxplot with the run17 data from the cherryblossom package. Then we'll add more features.

```{r}
run17 |> 
  slice_sample(n = 400) |> 
  ggplot(aes(x = event, y = pace_sec)) + geom_boxplot(fill = "lightblue")
```

## Let's add the overall event means to the plot

```{r}
run17 |> 
  slice_sample(n = 400) |> 
  ggplot(aes(x = event, y = pace_sec)) + geom_boxplot(fill = "lightblue") +
  geom_hline(yintercept = 586, color = "maroon", size = 2) + 
  geom_hline(yintercept = 763, color = "turquoise", size = 2) 
```

## Let's add another geom

```{r}
run17 |> 
  slice_sample(n = 400) |> 
  ggplot(aes(x = event, y = pace_sec)) + geom_boxplot(fill = "lightblue") + 
  geom_jitter()
```

## Let's add color by sex

```{r}
run17 |> 
  slice_sample(n = 400) |> 
  ggplot(aes(x = event, y = pace_sec)) +
  geom_boxplot(fill = "transparent") + 
  geom_jitter(aes(color = sex), size = 2) 
```

## Now labels and a theme

```{r}
run17 |> 
  slice_sample(n = 400) |> 
  ggplot(aes(x = event, y = pace_sec)) +
  geom_boxplot(fill = "transparent") + 
  geom_jitter(aes(color = sex), size = 2) +
  labs(x = "Event", y = "Pace (seconds)", 
       title = "Cherry Blossom Race", color = "Sex")
```

## Finally, a quick theme

```{r}
run17 |> 
  slice_sample(n = 400) |> 
  ggplot(aes(x = event, y = pace_sec)) +
  geom_boxplot(fill = "transparent") + 
  geom_jitter(aes(color = sex), size = 2) +
  labs(x = "Event", y = "Pace (seconds)", 
       title = "Cherry Blossom Race", color = "Sex") + 
  theme_classic()
```

## Let's Save our Plot

```{r}
ggsave("cherryblossomplot.jpeg")
```

## Switch to a different dataset

```{r}
# install.packages("usdata")
library(usdata)
```

## Getting to Know the County Data

```{r}
dim(county)
summary(county)
```

## Getting to Know the County Data

```{r}
head(county)
```

# Basic Boxplot

```{r}
county %>%
  ggplot(mapping = aes(x = state, y = median_hh_income)) + geom_boxplot()
```

# Flipping the coordinates

```{r}
county %>%
  ggplot(mapping = aes(x = state, y = median_hh_income)) + geom_boxplot() + coord_flip() + labs(x = NULL, y = "Household Income")
```

## Let's reorder the plot by household income

```{r}
county %>%
  ggplot(mapping = aes(x = reorder(state, median_hh_income), y = median_hh_income)) + geom_boxplot() + coord_flip() + labs(x = NULL, y = "Household Income")
```

## Add Interactivity Slides!!

## Add Carpentries, R Stats Workshop, MAL, SK contact

## Add Time for Evaluation Forms
